了解css特性可以化简代码/定位问题，并解决问题
有三个主要特性：继承性，层叠性，优先级

继承性：子级默认继承父级的文字控制属性
文字控制属性有字体大小，字体粗细，字体倾斜，行高，字体族，字体复合属性，文本缩进，文本对齐，修饰线，颜色
例如：
body {
    font-family: Microsoft YaHei , Heiti SC,tahoma,arial,Hiragino Sans GB,"\5B8B\4F53",sans-serif;
    color:#666;
}
这样body中的所有标签都会继承这个字体属性，如果有不同的就可以用选择器寻找标签，注意，通配符选择器是改变所有属性，而继承性是只继承文字属性，而且通配符会影响网页速度不建议使用

层叠性：特点：相同的属性会覆盖；后面的css属性覆盖前面的css属性
不同的属性会叠加：不同的css属性都生效
例如：
<style>
    div {
        color:red;
        font-weight:700;
    }
    div {
        color:green;
        font-size:30px;
    }
</style>

<div>div 标签</div>
在例子中font-weight和font-size都生效
color属性都有，后者覆盖前者，即green生效，red被覆盖
因此根据层叠性如果属性错了可以后面直接覆盖

优先级：也叫权重，当一个标签使用了多种选择器时，基于不同种类的选择器的匹配规则
<style>
    div {
        color:red;
    }
    .box {
        color:green;
    }
</style>

<div class="box">div 标签</div>
这个时候浏览器会判断，规则为
选择器优先级高的样式生效
公式为：通配符选择器<标签选择器<类选择器<id选择器<行内样式<!important
（选中标签的范围越大，优先级越低）
!important 提权功能，提高权重/优先级别 最高，但是慎用！
在实际开发中我们不能保证该属性需要永远最高，因此慎用！

优先级-叠加计算规则
div {
    color:red;
}
.box {
    color:green;
}

------------------------

.box div{
    color:red;
}
.box {
    color:green;
}
叠加运算：如果是符合选择器，则需要权重叠加计算
公式：（每一级之间不存在进位）
（行内样式，id选择器个数，类选择器个数，标签选择器个数）
规则：
从左向右一次比较选个数，同一级个数多的优先级高，如果个数相同则向后比较
!important权重最高
继承权重最低